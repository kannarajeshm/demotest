set hive.variable.substitute=true;
USE ${hiveconf:namespace}_hbase ;

! echo * CREATE VIEW ACCT_AGNG 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS acct_agng_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
         SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
         SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
         LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC, NO_CURR_PMT_ACTV_INDC
         FROM acct_agng_base
         UNION ALL SELECT *
         FROM acct_agng_delta) t1
      JOIN
        (SELECT ACCT_AGNG_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
            SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
            SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
            LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC, NO_CURR_PMT_ACTV_INDC
            FROM acct_agng_base
            UNION ALL SELECT *
            FROM acct_agng_delta) t2
         GROUP BY ACCT_AGNG_ID) s ON t1.ACCT_AGNG_ID = s.ACCT_AGNG_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_AGNG_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'ACCT_AGNG'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_EXPR 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS fnal_pmt_expr_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
         DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
         LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
         DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
         PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
         FROM fnal_pmt_expr_base
         UNION ALL SELECT *
         FROM fnal_pmt_expr_delta) t1
      JOIN
        (SELECT FNAL_PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
            DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
            LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
            DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
            PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
            FROM fnal_pmt_expr_base
            UNION ALL SELECT *
            FROM fnal_pmt_expr_delta) t2
         GROUP BY FNAL_PMT_EXPR_ID) s ON t1.FNAL_PMT_EXPR_ID = s.FNAL_PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_SUMM 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS fnal_pmt_summ_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
         FROM fnal_pmt_summ_base
         UNION ALL SELECT *
         FROM fnal_pmt_summ_delta) t1
      JOIN
        (SELECT FNAL_PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
            FROM fnal_pmt_summ_base
            UNION ALL SELECT *
            FROM fnal_pmt_summ_delta) t2
         GROUP BY FNAL_PMT_SUMM_ID) s ON t1.FNAL_PMT_SUMM_ID = s.FNAL_PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PST_DUE 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS fnal_pst_due_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
         FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
         FROM fnal_pst_due_base
         UNION ALL SELECT *
         FROM fnal_pst_due_delta) t1
      JOIN
        (SELECT FNAL_PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
            FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
            FROM fnal_pst_due_base
            UNION ALL SELECT *
            FROM fnal_pst_due_delta) t2
         GROUP BY FNAL_PST_DUE_ID) s ON t1.FNAL_PST_DUE_ID = s.FNAL_PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_EXPR 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS pmt_expr_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
         DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
         OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
         BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
         PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
         LST_SL_DT,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
         FROM pmt_expr_base
         UNION ALL SELECT *
         FROM pmt_expr_delta) t1
      JOIN
        (SELECT PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
            DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
            OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
            BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
            PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
            LST_SL_DT,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
            FROM pmt_expr_base
            UNION ALL SELECT *
            FROM pmt_expr_delta) t2
         GROUP BY PMT_EXPR_ID) s ON t1.PMT_EXPR_ID = s.PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_SUMM 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS pmt_summ_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
         FROM pmt_summ_base
         UNION ALL SELECT *
         FROM pmt_summ_delta) t1
      JOIN
        (SELECT PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
            FROM pmt_summ_base
            UNION ALL SELECT *
            FROM pmt_summ_delta) t2
         GROUP BY PMT_SUMM_ID) s ON t1.PMT_SUMM_ID = s.PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PST_DUE 10 YEARS MASTER;


CREATE VIEW IF NOT EXISTS pst_due_master AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
         FROM pst_due_base
         UNION ALL SELECT *
         FROM pst_due_delta) t1
      JOIN
        (SELECT PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
            FROM pst_due_base
            UNION ALL SELECT *
            FROM pst_due_delta) t2
         GROUP BY PST_DUE_ID) s ON t1.PST_DUE_ID = s.PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

-- *** 3 years views. ***

! echo * CREATE VIEW ACCT_AGNG 3 YEARS;

CREATE VIEW IF NOT EXISTS acct_agng AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
         SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
         SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
         LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC, NO_CURR_PMT_ACTV_INDC
         FROM acct_agng_base where acct_agng_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM acct_agng_delta) t1
      JOIN
        (SELECT ACCT_AGNG_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
           SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
           SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
           SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
           SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
           SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
           LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC, NO_CURR_PMT_ACTV_INDC
            FROM acct_agng_base where acct_agng_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM acct_agng_delta) t2
         GROUP BY ACCT_AGNG_ID) s ON t1.ACCT_AGNG_ID = s.ACCT_AGNG_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_AGNG_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'ACCT_AGNG'
   WHERE dt.PRIM_KEY IS NULL) dlt;


! echo * CREATE VIEW FNAL_PMT_EXPR 3 YEARS;


CREATE VIEW IF NOT EXISTS fnal_pmt_expr AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
         DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
         LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
         DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
         PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
         FROM fnal_pmt_expr_base where fnal_pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pmt_expr_delta) t1
      JOIN
        (SELECT FNAL_PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
            DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
            LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
            DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
            PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
            FROM fnal_pmt_expr_base where fnal_pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pmt_expr_delta) t2
         GROUP BY FNAL_PMT_EXPR_ID) s ON t1.FNAL_PMT_EXPR_ID = s.FNAL_PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_SUMM 3 YEARS;


CREATE VIEW IF NOT EXISTS fnal_pmt_summ AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
         FROM fnal_pmt_summ_base where fnal_pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pmt_summ_delta) t1
      JOIN
        (SELECT FNAL_PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
            FROM fnal_pmt_summ_base where fnal_pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pmt_summ_delta) t2
         GROUP BY FNAL_PMT_SUMM_ID)s
         ON t1.FNAL_PMT_SUMM_ID = s.FNAL_PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PST_DUE 3 YEARS;


CREATE VIEW IF NOT EXISTS fnal_pst_due AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
         FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
         FROM fnal_pst_due_base where fnal_pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pst_due_delta) t1
      JOIN
        (SELECT FNAL_PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
            FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
            FROM fnal_pst_due_base where fnal_pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pst_due_delta) t2
         GROUP BY FNAL_PST_DUE_ID) s ON t1.FNAL_PST_DUE_ID = s.FNAL_PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_EXPR 3 YEARS;


CREATE VIEW IF NOT EXISTS pmt_expr AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
         DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
         OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
         BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
         PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
         LST_SL_DT,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
         FROM pmt_expr_base where pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pmt_expr_delta) t1
      JOIN
        (SELECT PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
            DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
            OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
            BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
            PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
            LST_SL_DT,PRVD_CRCY_CD,FABD_EXPR_INDC,NO_CURR_PMT_ACTV_INDC
            FROM pmt_expr_base where pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pmt_expr_delta) t2
         GROUP BY PMT_EXPR_ID) s ON t1.PMT_EXPR_ID = s.PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_SUMM 3 YEARS;


CREATE VIEW IF NOT EXISTS pmt_summ AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
         FROM pmt_summ_base where pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pmt_summ_delta) t1
      JOIN
        (SELECT PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
            FROM pmt_summ_base where pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pmt_summ_delta) t2
         GROUP BY PMT_SUMM_ID) s ON t1.PMT_SUMM_ID = s.PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PST_DUE 3 YEARS;


CREATE VIEW IF NOT EXISTS pst_due AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
         FROM pst_due_base where pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pst_due_delta) t1
      JOIN
        (SELECT PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
            FROM pst_due_base where pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pst_due_delta) t2
         GROUP BY PST_DUE_ID) s ON t1.PST_DUE_ID = s.PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

=========================================================================================================================
set hive.variable.substitute=true;
CREATE DATABASE IF NOT EXISTS ${hiveconf:namespace}_hive;
USE ${hiveconf:namespace}_hive ;

! echo * CREATE VIEW CD_VAL ;


CREATE VIEW IF NOT EXISTS cd_val AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM cd_val_base
      UNION ALL SELECT *
      FROM cd_val_delta) t1
   JOIN
     (SELECT CD_VAL_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM cd_val_base
         UNION ALL SELECT *
         FROM cd_val_delta) t2
      GROUP BY CD_VAL_ID) s ON t1.CD_VAL_ID = s.CD_VAL_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW CD_VAL_TXT;


CREATE VIEW IF NOT EXISTS cd_val_txt AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM cd_val_txt_base
      UNION ALL SELECT *
      FROM cd_val_txt_delta) t1
   JOIN
     (SELECT CONCAT(cast(CD_VAL_ID AS string),'_',cast(LANG_CD AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM cd_val_txt_base
         UNION ALL SELECT *
         FROM cd_val_txt_delta) t2
      GROUP BY
      CONCAT(cast(CD_VAL_ID AS string),'_',cast(LANG_CD AS string))) s
      ON CONCAT(cast(t1.CD_VAL_ID AS string),'_',cast(t1.LANG_CD AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW CRCY_EXCH;


CREATE VIEW IF NOT EXISTS Crcy_exch AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROMf
     (SELECT *
      FROM Crcy_exch_base
      UNION ALL SELECT *
      FROM Crcy_exch_delta) t1
   JOIN
     (SELECT CONCAT(cast(CRCY_CD AS string),'_',cast(EXCH_RTE_TMST AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM Crcy_exch_base
         UNION ALL SELECT *
         FROM Crcy_exch_delta) t2
      GROUP BY CONCAT(cast(CRCY_CD AS string),'_',cast(EXCH_RTE_TMST AS string))) s ON CONCAT(cast(t1.CRCY_CD AS string),'_',cast(t1.EXCH_RTE_TMST AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW DNB_STD_TRM_AND_CMNT;


CREATE VIEW IF NOT EXISTS dnb_std_trm_and_cmnt AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM dnb_std_trm_and_cmnt_base
      UNION ALL SELECT *
      FROM dnb_std_trm_and_cmnt_delta) t1
   JOIN
     (SELECT DNB_STD_TRM_AND_CMNT_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM dnb_std_trm_and_cmnt_base
         UNION ALL SELECT *
         FROM dnb_std_trm_and_cmnt_delta) t2
      GROUP BY DNB_STD_TRM_AND_CMNT_ID) s ON t1.DNB_STD_TRM_AND_CMNT_ID = s.DNB_STD_TRM_AND_CMNT_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW DRVD_ELE ;


CREATE VIEW IF NOT EXISTS drvd_ele AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM drvd_ele_base
      UNION ALL SELECT *
      FROM drvd_ele_delta) t1
   JOIN
     (SELECT DRVD_ELE_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM drvd_ele_base
         UNION ALL SELECT *
         FROM drvd_ele_delta) t2
      GROUP BY DRVD_ELE_ID) s ON t1.DRVD_ELE_ID = s.DRVD_ELE_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW GEO_CRCY;


CREATE VIEW IF NOT EXISTS geo_crcy AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM geo_crcy_base
      UNION ALL SELECT *
      FROM geo_crcy_delta) t1
   JOIN
     (SELECT CONCAT(cast(GEO_REF_ID AS string),'_',cast(EFFV_DT AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM geo_crcy_base
         UNION ALL SELECT *
         FROM geo_crcy_delta) t2
      GROUP BY CONCAT(cast(GEO_REF_ID AS string),'_',cast(EFFV_DT AS string))) s ON CONCAT(cast(t1.GEO_REF_ID AS string),'_',cast(t1.EFFV_DT AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW GEO_UNIT;


CREATE VIEW IF NOT EXISTS geo_unit AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM geo_unit_base
      UNION ALL SELECT *
      FROM geo_unit_delta) t1
   JOIN
     (SELECT GEO_UNIT_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM geo_unit_base
         UNION ALL SELECT *
         FROM geo_unit_delta) t2
      GROUP BY GEO_UNIT_ID) s ON t1.GEO_UNIT_ID = s.GEO_UNIT_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW GEO_UNIT_ASSN;


CREATE VIEW IF NOT EXISTS geo_unit_assn AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM geo_unit_assn_base
      UNION ALL SELECT *
      FROM geo_unit_assn_delta) t1
   JOIN
     (SELECT CONCAT(cast(PRNT_GEO_UNIT_ID AS string),'_',cast(CHLD_GEO_UNIT_ID AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM geo_unit_assn_base
         UNION ALL SELECT *
         FROM geo_unit_assn_delta) t2
      GROUP BY CONCAT(cast(PRNT_GEO_UNIT_ID AS string),'_',cast(CHLD_GEO_UNIT_ID AS string))) s ON CONCAT(cast(t1.PRNT_GEO_UNIT_ID AS string),'_',cast(t1.CHLD_GEO_UNIT_ID AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW GEO_UNIT_CODE ;


CREATE VIEW IF NOT EXISTS geo_unit_code AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM geo_unit_code_base
      UNION ALL SELECT *
      FROM geo_unit_code_delta) t1
   JOIN
     (SELECT CONCAT(cast(GEO_UNIT_ID AS string),'_',cast(GEO_CODE_TYP_CD AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM geo_unit_code_base
         UNION ALL SELECT *
         FROM geo_unit_code_delta) t2
      GROUP BY CONCAT(cast(GEO_UNIT_ID AS string),'_',cast(GEO_CODE_TYP_CD AS string))) s ON CONCAT(cast(t1.GEO_UNIT_ID AS string),'_',cast(t1.GEO_CODE_TYP_CD AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW GEO_UNIT_NME ;


CREATE VIEW IF NOT EXISTS geo_unit_nme AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM geo_unit_nme_base
      UNION ALL SELECT *
      FROM geo_unit_nme_delta) t1
   JOIN
     (SELECT GEO_UNIT_NME_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM geo_unit_nme_base
         UNION ALL SELECT *
         FROM geo_unit_nme_delta) t2
      GROUP BY GEO_UNIT_NME_ID) s ON t1.GEO_UNIT_NME_ID = s.GEO_UNIT_NME_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW INDS_CODE ;


CREATE VIEW IF NOT EXISTS inds_code AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM inds_code_base
      UNION ALL SELECT *
      FROM inds_code_delta) t1
   JOIN
     (SELECT INDS_CODE_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM inds_code_base
         UNION ALL SELECT *
         FROM inds_code_delta) t2
      GROUP BY INDS_CODE_ID) s ON t1.INDS_CODE_ID = s.INDS_CODE_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW INDS_CODE_DESC;


CREATE VIEW IF NOT EXISTS inds_code_desc AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM inds_code_desc_base
      UNION ALL SELECT *
      FROM inds_code_desc_delta) t1
   JOIN
     (SELECT CONCAT(cast(INDS_CODE_ID AS string),'_',cast(LANG_CD AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM inds_code_desc_base
         UNION ALL SELECT *
         FROM inds_code_desc_delta) t2
      GROUP BY CONCAT(cast(INDS_CODE_ID AS string),'_',cast(LANG_CD AS string))) s ON CONCAT(cast(t1.INDS_CODE_ID AS string),'_',cast(t1.LANG_CD AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW ORG;


CREATE VIEW IF NOT EXISTS org AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM org_base
      UNION ALL SELECT *
      FROM org_delta) t1
   JOIN
     (SELECT ORG_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM org_base
         UNION ALL SELECT *
         FROM org_delta) t2
      GROUP BY ORG_ID) s ON t1.ORG_ID = s.ORG_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW ORG_DTL;


CREATE VIEW IF NOT EXISTS org_dtl AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM org_dtl_base
      UNION ALL SELECT *
      FROM org_dtl_delta) t1
   JOIN
     (SELECT ORG_DTL_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM org_dtl_base
         UNION ALL SELECT *
         FROM org_dtl_delta) t2
      GROUP BY ORG_DTL_ID) s ON t1.ORG_DTL_ID = s.ORG_DTL_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW ORG_SZ_CATG;


CREATE VIEW IF NOT EXISTS org_sz_catg AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM org_sz_catg_base
      UNION ALL SELECT *
      FROM org_sz_catg_delta) t1
   JOIN
     (SELECT ORG_SZ_CATG_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM org_sz_catg_base
         UNION ALL SELECT *
         FROM org_sz_catg_delta) t2
      GROUP BY ORG_SZ_CATG_ID) s ON t1.ORG_SZ_CATG_ID = s.ORG_SZ_CATG_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW ORG_ULT_ASSN ;


CREATE VIEW IF NOT EXISTS org_ult_assn AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM org_ult_assn_base
      UNION ALL SELECT *
      FROM org_ult_assn_delta) t1
   JOIN
     (SELECT ORG_ULT_ASSN_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM org_ult_assn_base
         UNION ALL SELECT *
         FROM org_ult_assn_delta) t2
      GROUP BY ORG_ULT_ASSN_ID) s ON t1.ORG_ULT_ASSN_ID = s.ORG_ULT_ASSN_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PMT_CLAS_AND_IDX_WGT;


CREATE VIEW IF NOT EXISTS pmt_clas_and_idx_wgt AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM pmt_clas_and_idx_wgt_base
      UNION ALL SELECT *
      FROM pmt_clas_and_idx_wgt_delta) t1
   JOIN
     (SELECT PMT_CLAS_AND_IDX_WGT_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM pmt_clas_and_idx_wgt_base
         UNION ALL SELECT *
         FROM pmt_clas_and_idx_wgt_delta) t2
      GROUP BY PMT_CLAS_AND_IDX_WGT_ID) s ON t1.PMT_CLAS_AND_IDX_WGT_ID = s.PMT_CLAS_AND_IDX_WGT_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PMT_CMNT_V_PMT_MANR_PREC_RL;


CREATE VIEW IF NOT EXISTS pmt_cmnt_v_pmt_manr_prec_rl AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM pmt_cmnt_v_pmt_manr_prec_rl_base
      UNION ALL SELECT *
      FROM pmt_cmnt_v_pmt_manr_prec_rl_delta) t1
   JOIN
     (SELECT PMT_CMNT_V_PMT_MANR_PREC_RL_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM pmt_cmnt_v_pmt_manr_prec_rl_base
         UNION ALL SELECT *
         FROM pmt_cmnt_v_pmt_manr_prec_rl_delta) t2
      GROUP BY PMT_CMNT_V_PMT_MANR_PREC_RL_ID) s ON t1.PMT_CMNT_V_PMT_MANR_PREC_RL_ID = s.PMT_CMNT_V_PMT_MANR_PREC_RL_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PRCS_PARM;


CREATE VIEW IF NOT EXISTS prcs_parm AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM prcs_parm_base
      UNION ALL SELECT *
      FROM prcs_parm_delta) t1
   JOIN
     (SELECT PRCS_PARM_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM prcs_parm_base
         UNION ALL SELECT *
         FROM prcs_parm_delta) t2
      GROUP BY PRCS_PARM_ID) s ON t1.PRCS_PARM_ID = s.PRCS_PARM_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PRCS_STEP;


CREATE VIEW IF NOT EXISTS prcs_step AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM prcs_step_base
      UNION ALL SELECT *
      FROM prcs_step_delta) t1
   JOIN
     (SELECT CONCAT(cast(PRCS_TYP_CD AS string),'_',cast(PRCS_STEP_CD AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM prcs_step_base
         UNION ALL SELECT *
         FROM prcs_step_delta) t2
      GROUP BY CONCAT(cast(PRCS_TYP_CD AS string),'_',cast(PRCS_STEP_CD AS string))) s ON CONCAT(cast(t1.PRCS_TYP_CD AS string),'_',cast(t1.PRCS_STEP_CD AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PRCS_STEP_PARM;


CREATE VIEW IF NOT EXISTS prcs_step_parm AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM prcs_step_parm_base
      UNION ALL SELECT *
      FROM prcs_step_parm_delta) t1
   JOIN
     (SELECT CONCAT(cast(PRCS_TYP_CD AS string),'_',cast(PRCS_STEP_CD AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM prcs_step_parm_base
         UNION ALL SELECT *
         FROM prcs_step_parm_delta) t2
      GROUP BY CONCAT(cast(PRCS_TYP_CD AS string),'_',cast(PRCS_STEP_CD AS string))) s ON CONCAT(cast(t1.PRCS_TYP_CD AS string),'_',cast(t1.PRCS_STEP_CD AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PURC_PRCS;


CREATE VIEW IF NOT EXISTS purc_prcs AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM purc_prcs_base
      UNION ALL SELECT *
      FROM purc_prcs_delta) t1
   JOIN
     (SELECT PURC_PRCS_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM purc_prcs_base
         UNION ALL SELECT *
         FROM purc_prcs_delta) t2
      GROUP BY PURC_PRCS_ID) s ON t1.PURC_PRCS_ID = s.PURC_PRCS_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW PURG_TBL;


CREATE VIEW IF NOT EXISTS purg_tbl AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM purg_tbl_base
      UNION ALL SELECT *
      FROM purg_tbl_delta) t1
   JOIN
     (SELECT CONCAT(cast(PRIM_KEY AS string),'_',cast(TBL_NME AS string)) AS ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM purg_tbl_base
         UNION ALL SELECT *
         FROM purg_tbl_delta) t2
      GROUP BY CONCAT(cast(PRIM_KEY AS string),'_',cast(TBL_NME AS string))) s ON CONCAT(cast(t1.PRIM_KEY AS string),'_',cast(t1.TBL_NME AS string)) = s.ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW SUPP;


CREATE VIEW IF NOT EXISTS supp AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM supp_base
      UNION ALL SELECT *
      FROM supp_delta) t1
   JOIN
     (SELECT SUPP_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM supp_base
         UNION ALL SELECT *
         FROM supp_delta) t2
      GROUP BY SUPP_ID) s ON t1.SUPP_ID = s.SUPP_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW SUPP_ACCT_MTCH_CFDC_STIC;


CREATE VIEW IF NOT EXISTS supp_acct_mtch_cfdc_stic AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM supp_acct_mtch_cfdc_stic_base
      UNION ALL SELECT *
      FROM supp_acct_mtch_cfdc_stic_delta) t1
   JOIN
     (SELECT SUPP_ACCT_MTCH_CFDC_STIC_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM supp_acct_mtch_cfdc_stic_base
         UNION ALL SELECT *
         FROM supp_acct_mtch_cfdc_stic_delta) t2
      GROUP BY SUPP_ACCT_MTCH_CFDC_STIC_ID) s ON t1.SUPP_ACCT_MTCH_CFDC_STIC_ID = s.SUPP_ACCT_MTCH_CFDC_STIC_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

! echo * CREATE VIEW TRD_EXCH_INDV;


CREATE VIEW IF NOT EXISTS trd_exch_indv AS
SELECT DISTINCT *
FROM
  (SELECT t1.*
   FROM
     (SELECT *
      FROM trd_exch_indv_base
      UNION ALL SELECT *
      FROM trd_exch_indv_delta) t1
   JOIN
     (SELECT TRD_EXCH_INDV_ID,
             max(LST_UPD_TMST) MAX_LST_UPD_TMST
      FROM
        (SELECT *
         FROM trd_exch_indv_base
         UNION ALL SELECT *
         FROM trd_exch_indv_delta) t2
      GROUP BY TRD_EXCH_INDV_ID) s ON t1.TRD_EXCH_INDV_ID = s.TRD_EXCH_INDV_ID
   AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3;

-- *** delete views ***
 ! echo * CREATE VIEW ACCT_AGNG;


CREATE VIEW IF NOT EXISTS acct_agng AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
         SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
         SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
         LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC
         FROM acct_agng_base
         UNION ALL SELECT *
         FROM acct_agng_delta) t1
      JOIN
        (SELECT ACCT_AGNG_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
            SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
            SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
            LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC
            FROM acct_agng_base
            UNION ALL SELECT *
            FROM acct_agng_delta) t2
         GROUP BY ACCT_AGNG_ID) s ON t1.ACCT_AGNG_ID = s.ACCT_AGNG_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_AGNG_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'ACCT_AGNG'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW ACCT_OVRD_INFO;


CREATE VIEW IF NOT EXISTS acct_ovrd_info AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM acct_ovrd_info_base
         UNION ALL SELECT *
         FROM acct_ovrd_info_delta) t1
      JOIN
        (SELECT ACCT_OVRD_INFO_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM acct_ovrd_info_base
            UNION ALL SELECT *
            FROM acct_ovrd_info_delta) t2
         GROUP BY ACCT_OVRD_INFO_ID) s ON t1.ACCT_OVRD_INFO_ID = s.ACCT_OVRD_INFO_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_OVRD_INFO_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'ACCT_OVRD_INFO'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FLE_CTRL ;


CREATE VIEW IF NOT EXISTS fle_ctrl AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM fle_ctrl_base
         UNION ALL SELECT *
         FROM fle_ctrl_delta) t1
      JOIN
        (SELECT CONCAT(cast(BTCH_ID AS string),'_',cast(FLE_CTRL_ID AS string)) AS ID,
                max(t2.LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM fle_ctrl_base
            UNION ALL SELECT *
            FROM fle_ctrl_delta) t2
         GROUP BY CONCAT(cast(BTCH_ID AS string),'_',cast(FLE_CTRL_ID AS string))) s ON CONCAT(cast(t1.BTCH_ID AS string),'_',cast(t1.FLE_CTRL_ID AS string)) = s.ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FLE_CTRL_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FLE_CTRL'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_EXPR;


CREATE VIEW IF NOT EXISTS fnal_pmt_expr AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
         DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
         LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
         DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
         PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD
         FROM fnal_pmt_expr_base
         UNION ALL SELECT *
         FROM fnal_pmt_expr_delta) t1
      JOIN
        (SELECT FNAL_PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
            DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
            LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
            DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
            PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD
            FROM fnal_pmt_expr_base
            UNION ALL SELECT *
            FROM fnal_pmt_expr_delta) t2
         GROUP BY FNAL_PMT_EXPR_ID) s ON t1.FNAL_PMT_EXPR_ID = s.FNAL_PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_SUMM;


CREATE VIEW IF NOT EXISTS fnal_pmt_summ AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
         FROM fnal_pmt_summ_base
         UNION ALL SELECT *
         FROM fnal_pmt_summ_delta) t1
      JOIN
        (SELECT FNAL_PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
            FROM fnal_pmt_summ_base
            UNION ALL SELECT *
            FROM fnal_pmt_summ_delta) t2
         GROUP BY FNAL_PMT_SUMM_ID) s ON t1.FNAL_PMT_SUMM_ID = s.FNAL_PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PST_DUE;


CREATE VIEW IF NOT EXISTS fnal_pst_due AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
         FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
         FROM fnal_pst_due_base
         UNION ALL SELECT *
         FROM fnal_pst_due_delta) t1
      JOIN
        (SELECT FNAL_PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
            FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
            FROM fnal_pst_due_base
            UNION ALL SELECT *
            FROM fnal_pst_due_delta) t2
         GROUP BY FNAL_PST_DUE_ID) s ON t1.FNAL_PST_DUE_ID = s.FNAL_PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_EXPR;


CREATE VIEW IF NOT EXISTS pmt_expr AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
         DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
         OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
         BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
         PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
         LST_SL_DT,PRVD_CRCY_CD
         FROM pmt_expr_base
         UNION ALL SELECT *
         FROM pmt_expr_delta) t1
      JOIN
        (SELECT PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
            DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
            OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
            BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
            PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
            LST_SL_DT,PRVD_CRCY_CD
            FROM pmt_expr_base
            UNION ALL SELECT *
            FROM pmt_expr_delta) t2
         GROUP BY PMT_EXPR_ID) s ON t1.PMT_EXPR_ID = s.PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_SUMM;


CREATE VIEW IF NOT EXISTS pmt_summ AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
         FROM pmt_summ_base
         UNION ALL SELECT *
         FROM pmt_summ_delta) t1
      JOIN
        (SELECT PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
            FROM pmt_summ_base
            UNION ALL SELECT *
            FROM pmt_summ_delta) t2
         GROUP BY PMT_SUMM_ID) s ON t1.PMT_SUMM_ID = s.PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PST_DUE;


CREATE VIEW IF NOT EXISTS pst_due AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
         FROM pst_due_base
         UNION ALL SELECT *
         FROM pst_due_delta) t1
      JOIN
        (SELECT PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
            FROM pst_due_base
            UNION ALL SELECT *
            FROM pst_due_delta) t2
         GROUP BY PST_DUE_ID) s ON t1.PST_DUE_ID = s.PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PURC;


CREATE VIEW IF NOT EXISTS purc AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM purc_base
         UNION ALL SELECT *
         FROM purc_delta) t1
      JOIN
        (SELECT PURC_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM purc_base
            UNION ALL SELECT *
            FROM purc_delta) t2
         GROUP BY PURC_ID) s ON t1.PURC_ID = s.PURC_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PURC_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PURC'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PURC_PYDX;


CREATE VIEW IF NOT EXISTS purc_pydx AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM purc_pydx_base
         UNION ALL SELECT *
         FROM purc_pydx_delta) t1
      JOIN
        (SELECT PURC_PYDX_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM purc_pydx_base
            UNION ALL SELECT *
            FROM purc_pydx_delta) t2
         GROUP BY PURC_PYDX_ID) s ON t1.PURC_PYDX_ID = s.PURC_PYDX_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PURC_PYDX_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PURC_PYDX'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW SUPP_AGNG_CATG;


CREATE VIEW IF NOT EXISTS supp_agng_catg AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM supp_agng_catg_base
         UNION ALL SELECT *
         FROM supp_agng_catg_delta) t1
      JOIN
        (SELECT SUPP_AGNG_CATG_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM supp_agng_catg_base
            UNION ALL SELECT *
            FROM supp_agng_catg_delta) t2
         GROUP BY SUPP_AGNG_CATG_ID) s ON t1.SUPP_AGNG_CATG_ID = s.SUPP_AGNG_CATG_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.SUPP_AGNG_CATG_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'SUPP_AGNG_CATG'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW SUPP_OVRD_INFO;


CREATE VIEW IF NOT EXISTS supp_ovrd_info AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM supp_ovrd_info_base
         UNION ALL SELECT *
         FROM supp_ovrd_info_delta) t1
      JOIN
        (SELECT SUPP_OVRD_INFO_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM supp_ovrd_info_base
            UNION ALL SELECT *
            FROM supp_ovrd_info_delta) t2
         GROUP BY SUPP_OVRD_INFO_ID) s ON t1.SUPP_OVRD_INFO_ID = s.SUPP_OVRD_INFO_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.SUPP_OVRD_INFO_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'SUPP_OVRD_INFO'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW SUPP_PMT_MANR_OVRD_INFO ;


CREATE VIEW IF NOT EXISTS supp_pmt_manr_ovrd_info AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM supp_pmt_manr_ovrd_info_base
         UNION ALL SELECT *
         FROM supp_pmt_manr_ovrd_info_delta) t1
      JOIN
        (SELECT SUPP_PMT_MANR_OVRD_INFO_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM supp_pmt_manr_ovrd_info_base
            UNION ALL SELECT *
            FROM supp_pmt_manr_ovrd_info_delta) t2
         GROUP BY SUPP_PMT_MANR_OVRD_INFO_ID) s ON t1.SUPP_PMT_MANR_OVRD_INFO_ID = s.SUPP_PMT_MANR_OVRD_INFO_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.SUPP_PMT_MANR_OVRD_INFO_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'SUPP_PMT_MANR_OVRD_INFO'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW SUPP_PURC_ID;


CREATE VIEW IF NOT EXISTS supp_purc_id AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM supp_purc_id_base
         UNION ALL SELECT *
         FROM supp_purc_id_delta) t1
      JOIN
        (SELECT SUPP_PURC_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM supp_purc_id_base
            UNION ALL SELECT *
            FROM supp_purc_id_delta) t2
         GROUP BY SUPP_PURC_ID) s ON t1.SUPP_PURC_ID = s.SUPP_PURC_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.SUPP_PURC_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'SUPP_PURC_ID'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW SUPP_SUMZ_INFO;


CREATE VIEW IF NOT EXISTS supp_sumz_info AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM supp_sumz_info_base
         UNION ALL SELECT *
         FROM supp_sumz_info_delta) t1
      JOIN
        (SELECT SUPP_SUMZ_INFO_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM supp_sumz_info_base
            UNION ALL SELECT *
            FROM supp_sumz_info_delta) t2
         GROUP BY SUPP_SUMZ_INFO_ID) s ON t1.SUPP_SUMZ_INFO_ID = s.SUPP_SUMZ_INFO_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.SUPP_SUMZ_INFO_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'SUPP_SUMZ_INFO'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW TRD_ACCT;


CREATE VIEW IF NOT EXISTS trd_acct AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM trd_acct_base
         UNION ALL SELECT *
         FROM trd_acct_delta) t1
      JOIN
        (SELECT ACCT_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM trd_acct_base
            UNION ALL SELECT *
            FROM trd_acct_delta) t2
         GROUP BY ACCT_ID) s ON t1.ACCT_ID = s.ACCT_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'TRD_ACCT'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW TRD_ACCT_DTL;


CREATE VIEW IF NOT EXISTS trd_acct_dtl AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM trd_acct_dtl_base
         UNION ALL SELECT *
         FROM trd_acct_dtl_delta) t1
      JOIN
        (SELECT TRD_ACCT_DTL_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM trd_acct_dtl_base
            UNION ALL SELECT *
            FROM trd_acct_dtl_delta) t2
         GROUP BY TRD_ACCT_DTL_ID) s ON t1.TRD_ACCT_DTL_ID = s.TRD_ACCT_DTL_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.TRD_ACCT_DTL_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'TRD_ACCT_DTL'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW TRD_BLC ;


CREATE VIEW IF NOT EXISTS trd_blc AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM trd_blc_base
         UNION ALL SELECT *
         FROM trd_blc_delta) t1
      JOIN
        (SELECT TRD_BLC_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM trd_blc_base
            UNION ALL SELECT *
            FROM trd_blc_delta) t2
         GROUP BY TRD_BLC_ID) s ON t1.TRD_BLC_ID = s.TRD_BLC_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.TRD_BLC_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'TRD_BLC'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW TRD_PGM_MTCH_DTL;


CREATE VIEW IF NOT EXISTS trd_pgm_mtch_dtl AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM trd_pgm_mtch_dtl_base
         UNION ALL SELECT *
         FROM trd_pgm_mtch_dtl_delta) t1
      JOIN
        (SELECT TRD_PGM_MTCH_DTL_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM trd_pgm_mtch_dtl_base
            UNION ALL SELECT *
            FROM trd_pgm_mtch_dtl_delta) t2
         GROUP BY TRD_PGM_MTCH_DTL_ID) s ON t1.TRD_PGM_MTCH_DTL_ID = s.TRD_PGM_MTCH_DTL_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.TRD_PGM_MTCH_DTL_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'TRD_PGM_MTCH_DTL'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW MNL_TRD_MTCH_DTL;
CREATE VIEW IF NOT EXISTS mnl_trd_mtch_dtl AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT *
         FROM mnl_trd_mtch_dtl_base
         UNION ALL SELECT *
         FROM mnl_trd_mtch_dtl_delta) t1
      JOIN
        (SELECT mnl_trd_mtch_dtl_id,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT *
            FROM mnl_trd_mtch_dtl_base
            UNION ALL SELECT *
            FROM mnl_trd_mtch_dtl_delta) t2
         GROUP BY mnl_trd_mtch_dtl_id) s ON t1.mnl_trd_mtch_dtl_id = s.mnl_trd_mtch_dtl_id
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.mnl_trd_mtch_dtl_id = dt.PRIM_KEY
   AND dt.TBL_NME = 'MNL_TRD_MTCH_DTL'
   WHERE dt.PRIM_KEY IS NULL) dlt;

-- *** 3 years views. ***

! echo * CREATE VIEW ACCT_AGNG_3Y;

CREATE VIEW IF NOT EXISTS acct_agng_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
         SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
         SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
         LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC
         FROM acct_agng_base where acct_agng_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM acct_agng_delta) t1
      JOIN
        (SELECT ACCT_AGNG_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT ACCT_AGNG_ID, ACCT_ID, EXPR_DT, CRCY_CD, PSTG_DT, PSTG_DT_PRCN_CD, SUPP_AGNG_CATG_1_ID,
           SUPP_AGNG_CATG_2_ID, SUPP_AGNG_CATG_3_ID, SUPP_AGNG_CATG_4_ID, SUPP_AGNG_CATG_5_ID, SUPP_AGNG_CATG_6_ID,
           SUPP_AGNG_CATG_7_ID, SUPP_AGNG_CATG_8_ID, SUPP_AGNG_CATG_9_ID, SUPP_AGNG_CATG_10_ID, SUPP_AGNG_CATG_11_ID,
           SUPP_AGNG_CATG_12_ID, SUPP_AGNG_CATG_1_AMT, SUPP_AGNG_CATG_2_AMT, SUPP_AGNG_CATG_3_AMT, SUPP_AGNG_CATG_4_AMT,
           SUPP_AGNG_CATG_5_AMT, SUPP_AGNG_CATG_6_AMT, SUPP_AGNG_CATG_7_AMT, SUPP_AGNG_CATG_8_AMT, SUPP_AGNG_CATG_9_AMT,
           SUPP_AGNG_CATG_10_AMT, SUPP_AGNG_CATG_11_AMT, SUPP_AGNG_CATG_12_AMT, ACTE_PSTG_INDC,CRE_TMST, LST_UPD_TMST,
           LD_TMST, BTCH_ID, SUPP_ID, PRVD_CRCY_CD, INV_CNT, FABD_PSTG_INDC
            FROM acct_agng_base where acct_agng_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM acct_agng_delta) t2
         GROUP BY ACCT_AGNG_ID) s ON t1.ACCT_AGNG_ID = s.ACCT_AGNG_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.ACCT_AGNG_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'ACCT_AGNG'
   WHERE dt.PRIM_KEY IS NULL) dlt;


! echo * CREATE VIEW FNAL_PMT_EXPR_3Y;


CREATE VIEW IF NOT EXISTS fnal_pmt_expr_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
         DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
         LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
         DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
         PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD
         FROM fnal_pmt_expr_base where fnal_pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pmt_expr_delta) t1
      JOIN
        (SELECT FNAL_PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,LST_SL_DT,NET_DUE_DY_QTY,
            DISC_LO_PCTG,DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,DNB_SBMT_OFC_NBR,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,
            LST_UPD_TMST,LD_TMST,ACCT_ID,BTCH_ID,PMT_EXPR_SRC_CD,LST_SL_WTHN_CD,PMT_CMNT_CD,SPCL_TRM_CD,NET_DUE_PRD_CD,
            DISC_PRD_LO_CD,DISC_PRD_HI_CD,CRCY_CD,MNL_TRD_INFO_SRC_CD,ORG_ID,OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,
            PRVD_PMT_EXPR_ID,DRVD_PMT_EXPR_ID,SUPP_ID,SUPR_DATA_FOR_OWRP_CHG_INDC,PRVD_CRCY_CD
            FROM fnal_pmt_expr_base where fnal_pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pmt_expr_delta) t2
         GROUP BY FNAL_PMT_EXPR_ID) s ON t1.FNAL_PMT_EXPR_ID = s.FNAL_PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PMT_SUMM_3Y;


CREATE VIEW IF NOT EXISTS fnal_pmt_summ_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
         FROM fnal_pmt_summ_base where fnal_pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pmt_summ_delta) t1
      JOIN
        (SELECT FNAL_PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,FNAL_PMT_SUMM_ID,ACCT_ID,EXPR_DT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            FNAL_PMT_EXPR_ID,ORG_ID,HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,PMT_MANR_OVRD_INDC,SUPP_ID
            FROM fnal_pmt_summ_base where fnal_pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pmt_summ_delta) t2
         GROUP BY FNAL_PMT_SUMM_ID) s ON t1.FNAL_PMT_SUMM_ID = s.FNAL_PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW FNAL_PST_DUE_3Y;


CREATE VIEW IF NOT EXISTS fnal_pst_due_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
         FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
         FROM fnal_pst_due_base where fnal_pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM fnal_pst_due_delta) t1
      JOIN
        (SELECT FNAL_PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT FNAL_PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,ACCT_ID,
            FNAL_PMT_EXPR_ID,BTCH_ID,EXPR_DT,ORG_ID,SUPP_ID
            FROM fnal_pst_due_base where fnal_pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM fnal_pst_due_delta) t2
         GROUP BY FNAL_PST_DUE_ID) s ON t1.FNAL_PST_DUE_ID = s.FNAL_PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.FNAL_PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'FNAL_PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_EXPR_3Y;


CREATE VIEW IF NOT EXISTS pmt_expr_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
         DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
         OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
         BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
         PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
         LST_SL_DT,PRVD_CRCY_CD
         FROM pmt_expr_base where pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pmt_expr_delta) t1
      JOIN
        (SELECT PMT_EXPR_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PMT_EXPR_ID,EXPR_DT,OWD_TOT_AMT,PST_DUE_TOT_AMT,CR_SPND_PRXY_AMT,NET_DUE_DY_QTY,DISC_LO_PCTG,
            DISC_HI_PCTG,DISC_DY_LO_QTY,DISC_DY_HI_QTY,ACTE_EXPR_INDC,CURR_INDC,CRE_TMST,LST_UPD_TMST,LD_TMST,
            OWD_TOT_AMT_PLUS_INDC,PST_DUE_TOT_AMT_PLUS_INDC,SUPR_OWD_TOT_AMT_INDC,SUPR_PST_DUE_AMT_INDC,ACCT_ID,
            BVAL_ERR_CD,AIH_ERR_CD,CRCY_CD,DISC_PRD_HI_CD,DISC_PRD_LO_CD,NET_DUE_PRD_CD,SPCL_TRM_CD,PMT_CMNT_CD,
            PMT_EXPR_SRC_CD,DATA_TYP_CD,SUPP_ID,BTCH_ID,DNB_SBMT_OFC_NBR,MNL_TRD_INFO_SRC_CD,LST_SL_WTHN_CD,
            LST_SL_DT,PRVD_CRCY_CD
            FROM pmt_expr_base where pmt_expr_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pmt_expr_delta) t2
         GROUP BY PMT_EXPR_ID) s ON t1.PMT_EXPR_ID = s.PMT_EXPR_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_EXPR_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_EXPR'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PMT_SUMM_3Y;


CREATE VIEW IF NOT EXISTS pmt_summ_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
         SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
         SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
         SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
         SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
         SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
         SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
         FROM pmt_summ_base where pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pmt_summ_delta) t1
      JOIN
        (SELECT PMT_SUMM_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT SUMM_PRD,HI_CR_AMT,PMT_MANR_SLO_DY_LO_QTY,PMT_MANR_SLO_DY_HI_QTY,PMT_MANR_CD,SUPP_AGNG_CATG_1_ID,
            SUPP_AGNG_CATG_2_ID,SUPP_AGNG_CATG_3_ID,SUPP_AGNG_CATG_4_ID,SUPP_AGNG_CATG_5_ID,SUPP_AGNG_CATG_6_ID,
            SUPP_AGNG_CATG_7_ID,SUPP_AGNG_CATG_8_ID,SUPP_AGNG_CATG_9_ID,SUPP_AGNG_CATG_10_ID,SUPP_AGNG_CATG_11_ID,
            SUPP_AGNG_CATG_12_ID,SUPP_AGNG_CATG_1_PD_AMT,SUPP_AGNG_CATG_2_PD_AMT,SUPP_AGNG_CATG_3_PD_AMT,
            SUPP_AGNG_CATG_4_PD_AMT,SUPP_AGNG_CATG_5_PD_AMT,SUPP_AGNG_CATG_6_PD_AMT,SUPP_AGNG_CATG_7_PD_AMT,
            SUPP_AGNG_CATG_8_PD_AMT,SUPP_AGNG_CATG_9_PD_AMT,SUPP_AGNG_CATG_10_PD_AMT,SUPP_AGNG_CATG_11_PD_AMT,
            SUPP_AGNG_CATG_12_PD_AMT,PMT_SUMM_ID,ACCT_ID,EXPR_DT,DATA_TYP_CD,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            HI_CR_AMT_PLUS_INDC,PMT_MANR_SLO_DY_HI_PLUS_INDC,SUPP_ID,SUPR_HI_CR_AMT_INDC,SUPR_PMT_MANR_INDC,PMT_EXPR_ID
            FROM pmt_summ_base where pmt_summ_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pmt_summ_delta) t2
         GROUP BY PMT_SUMM_ID) s ON t1.PMT_SUMM_ID = s.PMT_SUMM_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PMT_SUMM_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PMT_SUMM'
   WHERE dt.PRIM_KEY IS NULL) dlt;

! echo * CREATE VIEW PST_DUE_3Y;


CREATE VIEW IF NOT EXISTS pst_due_3y AS
SELECT dlt.*
FROM
  (SELECT DISTINCT t3.*
   FROM
     (SELECT t1.*
      FROM
        (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
         ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
         FROM pst_due_base where pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
         UNION ALL SELECT *
         FROM pst_due_delta) t1
      JOIN
        (SELECT PST_DUE_ID,
                max(LST_UPD_TMST) MAX_LST_UPD_TMST
         FROM
           (SELECT PST_DUE_ID,PST_DUE_DY_LO_QTY,PST_DUE_DY_HI_QTY,PST_DUE_AMT,CRE_TMST,LST_UPD_TMST,LD_TMST,BTCH_ID,
            ACCT_ID,DATA_TYP_CD,EXPR_DT,PMT_EXPR_ID,SUPP_ID
            FROM pst_due_base where pst_due_base.YYYYMM >=  trunc(add_months(current_date,-37),'MM')
            UNION ALL SELECT *
            FROM pst_due_delta) t2
         GROUP BY PST_DUE_ID) s ON t1.PST_DUE_ID = s.PST_DUE_ID
      AND t1.LST_UPD_TMST = s.MAX_LST_UPD_TMST)t3
   LEFT JOIN deletes dt ON t3.PST_DUE_ID = dt.PRIM_KEY
   AND dt.TBL_NME = 'PST_DUE'
   WHERE dt.PRIM_KEY IS NULL) dlt;
